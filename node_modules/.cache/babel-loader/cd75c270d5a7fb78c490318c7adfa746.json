{"ast":null,"code":"var _jsxFileName = \"/Users/davidtzur/Desktop/bootcamp-projects/react/smilgaproj/react-projects/02-tours/setup/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Loading from './Loading';\nimport Tours from './Tours'; // ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\n\nconst url = 'https://course-api.com/react-tours-project';\n\nfunction App() {\n  const [toursApi, setToursApi] = useState([]);\n  const [isLoadong, setIsLoadong] = useState(true);\n  const [refreshIt, setrefreshIt] = useState(false);\n\n  const removeTour = id => {\n    const newTours = toursApi.filter(tour => tour.id !== id);\n    setToursApi(newTours);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const fechData = async () => {\n      setIsLoadong(true);\n\n      try {\n        const response = await fetch(url);\n\n        if (response.ok && isMounted) {\n          const api = await response.json();\n          setToursApi(api);\n          setIsLoadong(false);\n        }\n      } catch (err) {\n        setIsLoadong(false);\n        console.log(err);\n      }\n    };\n\n    fechData();\n    return () => {\n      isMounted = false;\n    };\n  }, [refreshIt]);\n\n  const refresher = () => {\n    setrefreshIt(!refreshIt);\n  };\n\n  if (toursApi.length === 0) {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"no tours left\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: refresher,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Refresh\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, isLoadong ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(Tours, {\n    api: toursApi,\n    remove: removeTour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 35\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/davidtzur/Desktop/bootcamp-projects/react/smilgaproj/react-projects/02-tours/setup/src/App.js"],"names":["React","useState","useEffect","Loading","Tours","url","App","toursApi","setToursApi","isLoadong","setIsLoadong","refreshIt","setrefreshIt","removeTour","id","newTours","filter","tour","isMounted","fechData","response","fetch","ok","api","json","err","console","log","refresher","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;AACA;;AACA,MAAMC,GAAG,GAAG,4CAAZ;;AAGA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMY,UAAU,GAAIC,EAAD,IAAQ;AACzB,UAAMC,QAAQ,GAAGR,QAAQ,CAACS,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAApC,CAAjB;AACAN,IAAAA,WAAW,CAACO,QAAD,CAAX;AACD,GAHD;;AAKAb,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIgB,SAAS,GAAG,IAAhB;;AACE,UAAMC,QAAQ,GAAG,YAAY;AAC3BT,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEF,UAAG;AACD,cAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAChB,GAAD,CAA5B;;AACA,YAAGe,QAAQ,CAACE,EAAT,IAAeJ,SAAlB,EAA4B;AAC5B,gBAAMK,GAAG,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAlB;AACAhB,UAAAA,WAAW,CAACe,GAAD,CAAX;AACAb,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACC;AACF,OAPD,CAOE,OAAMe,GAAN,EAAW;AACXf,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AAGA,KAhBD;;AAkBFN,IAAAA,QAAQ;AAER,WAAO,MAAM;AAACD,MAAAA,SAAS,GAAG,KAAZ;AAAkB,KAAhC;AACD,GAvBQ,EAuBP,CAACP,SAAD,CAvBO,CAAT;;AAyBA,QAAMiB,SAAS,GAAG,MAAM;AACtBhB,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,MAAGJ,QAAQ,CAACsB,MAAT,KAAoB,CAAvB,EAAyB;AACvB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAIE;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAED,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF,CADF;AAUD;;AAED,sBACE,uDAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,SAAS,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAgB,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEF,QAAZ;AAAsB,IAAA,MAAM,EAAEM,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5B,CAFF,CADF;AAYD;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Loading from './Loading'\nimport Tours from './Tours'\n// ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\nconst url = 'https://course-api.com/react-tours-project'\n\n\nfunction App() {\n  const [toursApi, setToursApi] = useState([]);\n  const [isLoadong, setIsLoadong] = useState(true);\n  const [refreshIt, setrefreshIt] = useState(false);\n\n  const removeTour = (id) => {\n    const newTours = toursApi.filter(tour => tour.id !== id)\n    setToursApi(newTours);\n  }\n\n  useEffect(()=>{\n    let isMounted = true;\n      const fechData = async () => {\n        setIsLoadong(true)\n      \n      try{\n        const response = await fetch(url)\n        if(response.ok && isMounted){\n        const api = await response.json()\n        setToursApi(api)\n        setIsLoadong(false)\n        }\n      } catch(err) {\n        setIsLoadong(false)\n        console.log(err)\n      }\n      \n      \n      }\n      \n    fechData();\n    \n    return () => {isMounted = false};\n  },[refreshIt])\n\n  const refresher = () => {\n    setrefreshIt(!refreshIt)\n  }\n\n  if(toursApi.length === 0){\n    return(\n      <main>\n        <div className='title'>\n          <h2>\n            no tours left\n          </h2>\n          <button className='btn' onClick={refresher}>Refresh</button>\n        </div>\n      </main>\n    )\n  }\n  \n  return (\n    <>\n      \n      <main>\n        {isLoadong ? <Loading/> : <Tours api={toursApi} remove={removeTour}/> }\n        \n      </main>\n      \n    </>\n    \n  )\n  \n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}